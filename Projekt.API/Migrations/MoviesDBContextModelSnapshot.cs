// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.API.Model;

#nullable disable

namespace Projekt.API.Migrations
{
    [DbContext(typeof(MoviesDBContext))]
    partial class MoviesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientMovie", b =>
                {
                    b.Property<int>("ClientsID")
                        .HasColumnType("int");

                    b.Property<int>("MoviesID")
                        .HasColumnType("int");

                    b.HasKey("ClientsID", "MoviesID");

                    b.HasIndex("MoviesID");

                    b.ToTable("ClientMovie");
                });

            modelBuilder.Entity("Projekt.API.Model.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Lastname = "Kowalski",
                            Name = "Jan"
                        },
                        new
                        {
                            ID = 2,
                            Lastname = "Nowak",
                            Name = "Anna"
                        });
                });

            modelBuilder.Entity("Projekt.API.Model.Movie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClientID = 1,
                            Name = "Harry Potter",
                            Rating = 7.0,
                            Type = "Fantasy"
                        },
                        new
                        {
                            ID = 2,
                            ClientID = 2,
                            Name = "Skazany na Shawshank",
                            Rating = 8.6999999999999993,
                            Type = "Dramat"
                        },
                        new
                        {
                            ID = 3,
                            ClientID = 1,
                            Name = "Coco",
                            Rating = 7.5,
                            Type = "Familijny"
                        });
                });

            modelBuilder.Entity("ClientMovie", b =>
                {
                    b.HasOne("Projekt.API.Model.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.API.Model.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
